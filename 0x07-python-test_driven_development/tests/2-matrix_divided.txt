# 2-matrix_divided.txt

Import
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Documentation check
>>> len(__import__("2-matrix_divided").__doc__) > 0
True

Dividing two matrix by 2
>>> matrix_divided([[4, 4, 6], [2, 5, 3]], 2)
[[2.0, 2.0, 3.0], [1.0, 2.5, 1.5]]

Dividing different size matrix
>>> matrix_divided([[2, 4, 2], [2, 3, 4, 5, 6]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Dividing by zero
>>> matrix_divided([[2, 4, 2], [2, 3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Dividing with no matrix
>>> matrix_divided([5, 6, 7], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing with wrong element type in matrix
>>> matrix_divided([[2, "yo"], [1, 4]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing with wrong element type div
>>> matrix_divided([[2, 4, 6], [8, 9, 10]], "hello")
Traceback (most recent call last):
TypeError: div must be a number

Missing two arguments
>>> matrix_divided([], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Argument is a string
>>> matrix_divided("yo", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Missing arguments
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
